# docker-compose.yml

services:
  postgres:
    image: postgres:15-alpine
    container_name: nestjs_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nestjs_pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres

  nestjs:
    build: .
    container_name: nestjs-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/myapp
    networks:
      - app-network
    expose:
      - "3001"
    depends_on:
      - postgres

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "8000:80"  # Mudou de 80:80 para 8000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - nestjs

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok-tunnel
    restart: unless-stopped
    command:
      - "http"
      - "nginx:80"
      - "--log=stdout"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    networks:
      - app-network
    depends_on:
      - nginx

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge